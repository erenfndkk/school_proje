<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        4zSTJzzh/wENJ4Hca8QazwAAAABJRU5ErkJggg==
</value>
  </data>
</root>